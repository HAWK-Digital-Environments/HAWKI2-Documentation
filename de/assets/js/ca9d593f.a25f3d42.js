"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[105],{2294:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"HAWKI/Architecture/Core Architecture","title":"Core Architecture","description":"Introduction","source":"@site/docs/HAWKI/3-Architecture/1-Core Architecture.md","sourceDirName":"HAWKI/3-Architecture","slug":"/HAWKI/Architecture/Core Architecture","permalink":"/HAWKI2-Documentation/de/HAWKI/Architecture/Core Architecture","draft":false,"unlisted":false,"editUrl":"https://github.com/hawk/your-project/edit/main/docs/HAWKI/3-Architecture/1-Core Architecture.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"HAWKI_Sidebar","previous":{"title":"Architecture","permalink":"/HAWKI2-Documentation/de/category/architecture"},"next":{"title":"Routes","permalink":"/HAWKI2-Documentation/de/HAWKI/Architecture/Routes"}}');var r=n(4848),s=n(8453);const o={sidebar_position:1},a=void 0,c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"MVC Architecture",id:"mvc-architecture",level:2},{value:"Model-View-Controller Pattern",id:"model-view-controller-pattern",level:3},{value:"Benefits of MVC",id:"benefits-of-mvc",level:3},{value:"Modular Design",id:"modular-design",level:3}];function d(e){const t={h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(t.p,{children:"HAWKI2 is built on the Laravel framework, renowned for its robustness and ease of use in developing modern web applications. Laravel employs the Model-View-Controller (MVC) architecture, offering a plethora of tools and flexibility that enhance both development efficiency and application security."}),"\n",(0,r.jsx)(t.p,{children:"This chapter discusses the general architecture of HAWKI2."}),"\n",(0,r.jsx)(t.h2,{id:"mvc-architecture",children:"MVC Architecture"}),"\n",(0,r.jsx)(t.h3,{id:"model-view-controller-pattern",children:"Model-View-Controller Pattern"}),"\n",(0,r.jsx)(t.p,{children:"The MVC architecture is a software design pattern that separates an application into three main logical components:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Model:"})," This component is responsible for managing data logic and interactions with the database. It represents the application's data structures and handles data-related tasks."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"View:"})," The view is responsible for the presentation layer, displaying the user interface elements and rendering data to users."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Controller:"})," Controllers act as intermediaries between models and views. They process incoming requests, handle user input, execute business logic, and return the appropriate response."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"image",src:n(2159).A+"",width:"1385",height:"721"})}),"\n",(0,r.jsx)(t.h3,{id:"benefits-of-mvc",children:"Benefits of MVC"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Separation of Concerns:"})," MVC clearly separates the business logic from the user interface, simplifying maintenance and scalability of the code."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Reusability and Flexibility:"})," Facilitates code reuse and allows for easier adaptation to changes with minimized impact to other components."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Security:"})," Enhances security through an organized structure and Laravel\u2019s built-in features like Cross-Site Request Forgery (CSRF) protection and authentication."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"modular-design",children:"Modular Design"}),"\n",(0,r.jsx)(t.p,{children:"HAWKI2 adopts a modular architecture, emphasizing the separation of concerns to enhance flexibility, scalability, and collaboration. This approach not only facilitates independent development but also supports the seamless integration of additional functionalities by the open-source community.\nBy adapting to this developers are able to expand the platform by adding their own moduls parallel to utilizing and expanding HAWKI core features and services."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},2159:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/mvc-0c12ddaf1e95c3e39baf48f571ee7e41.png"},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);