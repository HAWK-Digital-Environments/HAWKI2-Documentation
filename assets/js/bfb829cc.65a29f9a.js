"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[332],{2247:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"HAWKI/Deployment/Docker Deployment","title":"Docker Deployment","description":"Instead of manually setting up PHP and Apache as described in \\"Apache Deployment\\", you can use","source":"@site/docs/HAWKI/5-Deployment/3- Docker Deployment.md","sourceDirName":"HAWKI/5-Deployment","slug":"/HAWKI/Deployment/Docker Deployment","permalink":"/HAWKI2-Documentation/HAWKI/Deployment/Docker Deployment","draft":false,"unlisted":false,"editUrl":"https://github.com/hawk/your-project/edit/main/docs/HAWKI/5-Deployment/3- Docker Deployment.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"HAWKI_Sidebar","previous":{"title":"Nginx Server","permalink":"/HAWKI2-Documentation/HAWKI/Deployment/Nginx Server"}}');var t=o(4848),r=o(8453);const s={sidebar_position:3},c="Docker Deployment",d={},a=[{value:"Docker Compose",id:"docker-compose",level:2},{value:"What&#39;s in the box",id:"whats-in-the-box",level:3},{value:"Deployment",id:"deployment",level:3},{value:"Building a custom container",id:"building-a-custom-container",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"docker-deployment",children:"Docker Deployment"})}),"\n",(0,t.jsxs)(n.p,{children:["Instead of manually setting up PHP and Apache ",(0,t.jsx)(n.a,{href:"Apache%20Deployment.md",children:'as described in "Apache Deployment"'}),", you can use\nDocker to deploy HAWKI. Our official\nimage ",(0,t.jsx)(n.a,{href:"https://hub.docker.com/r/digitalenvironments/hawki",children:"digitalenvironments/hawki"})," is\navailable on Docker Hub."]}),"\n",(0,t.jsx)(n.h2,{id:"docker-compose",children:"Docker Compose"}),"\n",(0,t.jsxs)(n.p,{children:["For smaller setups you can use a simple Docker Compose file to run HAWKI.\nIn the ",(0,t.jsx)(n.code,{children:"_docker_production"})," directory of this repo you can find a preconfigured setup how your production server\ncould look like. It features an nginx proxy, a mysql database as well as a redis cache and a php-fpm server."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Please consider it a starting point you can/should adapt to your needs."})}),"\n",(0,t.jsx)(n.p,{children:"A few things to consider:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:['SSL Certificates - Place your SSL certificates in the "certs" directory, (cert.pem, key.pem) which will be mounted to\nthe nginx container. Keep in mind, that inside the ',(0,t.jsx)(n.code,{children:"docker compose"})," network there is NO SSL encryption. The SSL\nconnection terminates at the nginx layer."]}),"\n",(0,t.jsxs)(n.li,{children:["Environment Variables - There is already a minimal .env file available in the ",(0,t.jsx)(n.code,{children:"_docker_production"})," directory, adjust\nit to fit your needs.\nNote that some variables should be kept as is, because they are required for the docker-compose setup. But some MUST\nbe adjusted for security (e.g. the passwords and encryption keys).\nYou can extend the .env file with any variable you find in the ",(0,t.jsx)(n.code,{children:".env.example"})," file to adjust HAWKI to your needs; if\nnot given the default value will be used."]}),"\n",(0,t.jsxs)(n.li,{children:["SQL Database - For ease of use the MYSQL data is stored in a docker volume, for a more permanent setup you may adjust\nthe ",(0,t.jsx)(n.code,{children:"mysql_data:/var/lib/mysql"})," line, so it points to a directory on your host. Or, if you already have a database\nserver, you can obviously point the container to it and remove the mysql service entirely."]}),"\n",(0,t.jsxs)(n.li,{children:["Nginx - The nginx server acts as a main entrypoint for the application, it is configured to listen on port 80 and 443,\nwith automatic SSL redirection. Check the ",(0,t.jsx)(n.code,{children:"nginx.default.conf"})," file for more details and adapt it to your needs."]}),"\n",(0,t.jsxs)(n.li,{children:["Authentication - To authenticate users you can use LDAP, OpenID Connect or SAML, adjust the ",(0,t.jsx)(n.code,{children:".env"})," file as described\nin the ",(0,t.jsx)(n.code,{children:"Setup Authentication Methods"})," section of the ",(0,t.jsx)(n.a,{href:"Apache%20Deployment.md",children:"Apache Deployment"})," guide."]}),"\n",(0,t.jsxs)(n.li,{children:["Model configuration - You find a default ",(0,t.jsx)(n.code,{children:"model_providers.php"})," file in the ",(0,t.jsx)(n.code,{children:"_docker_production"})," directory, you\nwhich will be mounted to the HAWKI container. Please adjust it as described in the ",(0,t.jsx)(n.code,{children:"Adding API Keys"})," section of the\n",(0,t.jsx)(n.a,{href:"Apache%20Deployment.md",children:"Apache Deployment"})," guide."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"whats-in-the-box",children:"What's in the box"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"docker-compose.yml"})," contains a setup of multiple services"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"app"})," - The HAWKI container"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"queue"})," - The queue worker container, which runs in the background and restarts every 90 seconds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"reverb"})," - The reverb server container, which handles the real-time communication between the client and the server\nusing Websockets. Feel free to scale up the number of reverb workers if you have a large number of users."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"mysql"})," - The MySQL container"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"redis"})," - The Redis container used for caching and reverb communication"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nginx"})," - The nginx container, which handles the reverse proxy and SSL termination"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"deployment",children:"Deployment"}),"\n",(0,t.jsxs)(n.p,{children:["Once you made the necessary adjustments on the files mentioned above copy the ",(0,t.jsx)(n.code,{children:"_docker_production"})," directory to your\nserver and execute the following command: ",(0,t.jsx)(n.code,{children:"chmod +x deploy.sh && ./deploy.sh"}),". This will automatically\nbring up the containers and run the migrations."]}),"\n",(0,t.jsx)(n.h2,{id:"building-a-custom-container",children:"Building a custom container"}),"\n",(0,t.jsxs)(n.p,{children:["Of course, you can completely customize the container if you want to. The ",(0,t.jsx)(n.code,{children:"Dockerfile"})," in the root of the repository\nprovides the ",(0,t.jsx)(n.code,{children:"app_prod"})," build target which builds a production ready HAWKI container. Feel free to modify it to your\nneeds or inherit your own image from the ",(0,t.jsx)(n.code,{children:"digitalenvironments/hawki"})," image."]}),"\n",(0,t.jsxs)(n.p,{children:["Build the image: ",(0,t.jsx)(n.code,{children:"docker build --target app_prod -t digitalenvironments/hawki:latest ."}),"\nOr by using: ",(0,t.jsx)(n.code,{children:"bin/env docker:build:prod"})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var i=o(6540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);