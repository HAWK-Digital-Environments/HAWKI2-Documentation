"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[654],{7124:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"HAWKI/Architecture/MVC","title":"Models Views Controllers","description":"Introduction","source":"@site/docs/HAWKI/3-Architecture/3-MVC.md","sourceDirName":"HAWKI/3-Architecture","slug":"/HAWKI/Architecture/MVC","permalink":"/HAWKI/Architecture/MVC","draft":false,"unlisted":false,"editUrl":"https://github.com/hawk/your-project/edit/main/docs/HAWKI/3-Architecture/3-MVC.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"HAWKI_Sidebar","previous":{"title":"Routes","permalink":"/HAWKI/Architecture/Routes"},"next":{"title":"Encryption","permalink":"/HAWKI/Architecture/Encryption"}}');var t=s(4848),i=s(8453);const l={sidebar_position:3},o="Models Views Controllers",d={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Models",id:"models",level:2},{value:"Views",id:"views",level:2},{value:"Controllers",id:"controllers",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"models-views-controllers",children:"Models Views Controllers"})}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.h2,{id:"models",children:"Models"}),"\n",(0,t.jsx)(n.p,{children:"Eloquent, Laravel's Object Relational Mapping (ORM) system, simplifies data interactions with the database using an expressive syntax that provides intuitive database table management.\nModels are defined to represent database tables and manage data. They encapsulate business logic, queries, and validation rules.\nEach model also includes a migration file, which is responsible for creating the necessary tables for each model in the database when the project is initialised.\nModels also define relationships and may include functions for fetching and processing data."}),"\n",(0,t.jsx)(n.p,{children:"The following chart shows a short summery of each model in HAWKI."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Controller"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AiConv"}),(0,t.jsx)(n.td,{children:"Private conversation with AI"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AiConvMsg"}),(0,t.jsx)(n.td,{children:"The message belonging an AiConv"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Invitation"}),(0,t.jsx)(n.td,{children:"Invitation for a User in a Room"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Member"}),(0,t.jsx)(n.td,{children:"Membership variables of a User in a Room"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Message"}),(0,t.jsx)(n.td,{children:"The message belonging to a Room"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PasskeyBackup"}),(0,t.jsx)(n.td,{children:"Backup of the encrypted user passkey"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"PrivateUserData"}),(0,t.jsx)(n.td,{children:"Keychain backup and other private information of a user"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Room"}),(0,t.jsx)(n.td,{children:"The Group chat room"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"User"}),(0,t.jsx)(n.td,{children:"Registered user on HAWKI, also used by Auth facade"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"views",children:"Views"}),"\n",(0,t.jsxs)(n.p,{children:["HAWKIs frontend is based on Laravel Blade. By using powerful features of the blade HAWKI interface is divided into three different layers, ",(0,t.jsx)(n.strong,{children:"layouts"}),", ",(0,t.jsx)(n.strong,{children:"modules"}),", and ",(0,t.jsx)(n.strong,{children:"partials"})]}),"\n",(0,t.jsxs)(n.p,{children:["As ",(0,t.jsx)(n.strong,{children:"layoutes"})," contain the general structure of the page, like ",(0,t.jsx)(n.em,{children:"login"})," or ",(0,t.jsx)(n.em,{children:"home"}),", ",(0,t.jsx)(n.strong,{children:"modules"})," are the main content structure yielded in one of the layouts, such as ",(0,t.jsx)(n.em,{children:"chat"}),", ",(0,t.jsx)(n.em,{children:"groupchat"}),", ",(0,t.jsx)(n.em,{children:"profile"}),". Likewise ",(0,t.jsx)(n.strong,{children:"partials"})," are smaller UI components loaded in each module."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image",src:s(9197).A+"",width:"1161",height:"860"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Templates"})}),"\n",(0,t.jsxs)(n.p,{children:["Dynamic instantiated partials, such as messages, chat history or room list items are prepared as templates and included in ",(0,t.jsx)(n.code,{children:"/views/partials/home/templates.blade.php"}),". These template nodes are later cloned and added dynamically to the interface."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Icons"})}),"\n",(0,t.jsxs)(n.p,{children:["To create a cleaner and more readable code base as well as to simplify things, the SVG icons are converted to blade components and added as ",(0,t.jsx)(n.code,{children:"<x-icon/>"})," in the DOM.\nPlease refer to ",(0,t.jsx)(n.code,{children:"app/View/Components/Icon.php"})," for more information."]}),"\n",(0,t.jsx)(n.p,{children:"To add new icons:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["copy the svg file in ",(0,t.jsx)(n.code,{children:"views/icons/"})," folder,"]}),"\n",(0,t.jsxs)(n.li,{children:["change the file extension from ",(0,t.jsx)(n.code,{children:".svg"})," to ",(0,t.jsx)(n.code,{children:"blade.php"}),". (",(0,t.jsx)(n.code,{children:"myicon.svg"})," to ",(0,t.jsx)(n.code,{children:"myicon.blade.php"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"add the icon to DOM as:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-html",children:'<x-icon name="myicon"/>\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Emails"})}),"\n",(0,t.jsxs)(n.p,{children:["The email structures are also created as blade files. Obviously this allows utilizing normal blade features.\nThe Email view is then read by ",(0,t.jsx)(n.code,{children:"MailController"})," and dispatched by ",(0,t.jsx)(n.code,{children:"SendEmailJob.php"})," as Email to the user."]}),"\n",(0,t.jsx)(n.h2,{id:"controllers",children:"Controllers"}),"\n",(0,t.jsx)(n.p,{children:"Controllers handle the core logic of HAWKI. As mentioned before, each route passes the request directly to a function in one of the controllers, which is then processed and responded to."}),"\n",(0,t.jsx)(n.p,{children:"Each controller may utilize several sevices, jobs, events etc. for shared functionalities or pass and fetch data to and from other controllers as well as utilizing models for storing and retrieving data from the database."}),"\n",(0,t.jsx)(n.p,{children:"The following chart shows a short summery of each controller."}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Controller"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AccessTokenController"}),(0,t.jsx)(n.td,{children:"Handles Sanctum tokens for external access"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AiConvController"}),(0,t.jsx)(n.td,{children:"Handles requests related to a user conversation (aka. single chat)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"AuthenticationController"}),(0,t.jsx)(n.td,{children:"Handles login requests. Based on the authentication mechanism utilizes one of the dedicated services (LDAP, Shibboleth, OpenID) to authenticate users and redirect them to the home page."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"EncryptionController"}),(0,t.jsx)(n.td,{children:"Server side encryption for AI model messages in the groupchat"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"HomeController"}),(0,t.jsx)(n.td,{children:"Handeling render requests after authentication as well as session attributes"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ImageController"}),(0,t.jsx)(n.td,{children:"Handeling image data uploaded by users as avatars, profile pictures etc."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"InvitationController"}),(0,t.jsx)(n.td,{children:"Handeling and storing all of the user invitation logics"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LanguageController"}),(0,t.jsx)(n.td,{children:"Provides language and translation data for rendering views"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"LoginController"}),(0,t.jsx)(n.td,{children:"Simply prepares the components and renders the login page."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MailController"}),(0,t.jsx)(n.td,{children:"Controls mail services for external user invitation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ProfileController"}),(0,t.jsx)(n.td,{children:"Handels user profile requests and provides user data to other controllers"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RoomController"}),(0,t.jsx)(n.td,{children:"Handles requests related to Rooms (aka. Groupchats)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SearchController"}),(0,t.jsx)(n.td,{children:"Reponds the user search requests"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"SettingsController"}),(0,t.jsx)(n.td,{children:"Renders setting panel on the server side and passes it to other controllers when rendering a view."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"StreamController"}),(0,t.jsx)(n.td,{children:"Handles all of the internal and external requests to an AI models including creating the payload, connection to AI models, and manipulating the response data."})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"For detailed information about each controller please refer to the commented information inside the controller class."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},9197:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/views-9e236f847548f63285d2526847f2409c.png"},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);