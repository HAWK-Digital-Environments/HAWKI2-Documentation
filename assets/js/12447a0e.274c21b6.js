"use strict";(self.webpackChunkdocs_site=self.webpackChunkdocs_site||[]).push([[651],{6008:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"HAWKI/stash/Docker Deployment","title":"Docker Deployment","description":"Overview","source":"@site/docs/HAWKI/stash/3- Docker Deployment.md","sourceDirName":"HAWKI/stash","slug":"/HAWKI/stash/Docker Deployment","permalink":"/HAWKI/stash/Docker Deployment","draft":false,"unlisted":false,"editUrl":"https://github.com/hawk/your-project/edit/main/docs/HAWKI/stash/3- Docker Deployment.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"HAWKI_Sidebar","previous":{"title":"Nginx Server","permalink":"/HAWKI/Deployment/Nginx Server"}}');var r=s(4848),o=s(8453);const a={sidebar_position:3},c=void 0,t={},l=[{value:"Overview",id:"overview",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Docker Configuration Files Overview",id:"docker-configuration-files-overview",level:2},{value:"Deployment Steps",id:"deployment-steps",level:2},{value:"1. Clone the Repository",id:"1-clone-the-repository",level:3},{value:"2. Environment Configuration",id:"2-environment-configuration",level:3},{value:"Database Configuration",id:"database-configuration",level:4},{value:"REVERB WebSocket Configuration",id:"reverb-websocket-configuration",level:4},{value:"Server Salts (Security)",id:"server-salts-security",level:4},{value:"Authentication Method",id:"authentication-method",level:4},{value:"3. Configure API Keys",id:"3-configure-api-keys",level:3},{value:"4. Build and Start Docker Containers",id:"4-build-and-start-docker-containers",level:3},{value:"5. Initialize the Database",id:"5-initialize-the-database",level:3},{value:"6. Create Storage Link",id:"6-create-storage-link",level:3},{value:"7. Cache Configuration (Optional)",id:"7-cache-configuration-optional",level:3},{value:"Accessing HAWKI",id:"accessing-hawki",level:2},{value:"Production Deployment Considerations",id:"production-deployment-considerations",level:2},{value:"1. SSL/TLS Configuration",id:"1-ssltls-configuration",level:3},{value:"2. Docker Volumes for Persistent Data",id:"2-docker-volumes-for-persistent-data",level:3},{value:"3. Regular Backups",id:"3-regular-backups",level:3},{value:"4. Container Resource Limits",id:"4-container-resource-limits",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"1. Container Logs",id:"1-container-logs",level:3},{value:"2. Supervisor Process Logs",id:"2-supervisor-process-logs",level:3},{value:"3. Restarting Services",id:"3-restarting-services",level:3},{value:"4. Common Issues",id:"4-common-issues",level:3},{value:"&quot;Failed to fetch Server Salt&quot;",id:"failed-to-fetch-server-salt",level:4},{value:"WebSocket Connection Issues",id:"websocket-connection-issues",level:4},{value:"Database Connection Issues",id:"database-connection-issues",level:4},{value:"Updating HAWKI",id:"updating-hawki",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"This guide provides step-by-step instructions for deploying HAWKI using Docker containers. Docker allows for a consistent deployment experience across different environments and simplifies the setup process."}),"\n",(0,r.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,r.jsx)(n.p,{children:"Before proceeding with the Docker deployment, ensure your server meets the following requirements:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Docker Engine installed (version 20.10+)"}),"\n",(0,r.jsx)(n.li,{children:"Docker Compose installed (version 2.0+)"}),"\n",(0,r.jsx)(n.li,{children:"At least 2GB of RAM"}),"\n",(0,r.jsx)(n.li,{children:"10GB of free disk space"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"docker-configuration-files-overview",children:"Docker Configuration Files Overview"}),"\n",(0,r.jsx)(n.p,{children:"HAWKI's Docker configuration consists of several key files:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Dockerfile"})," - Defines the main application container with PHP, Apache, and all required extensions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docker-compose.yml"})," - Orchestrates the multi-container setup with MySQL and phpMyAdmin"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docker/apache.conf"})," - Apache configuration for the web server"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docker/php.ini"})," - PHP configuration optimized for HAWKI"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"docker/supervisord.conf"})," - Manages multiple processes including Laravel Queue Workers and Reverb WebSocket server"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"deployment-steps",children:"Deployment Steps"}),"\n",(0,r.jsx)(n.h3,{id:"1-clone-the-repository",children:"1. Clone the Repository"}),"\n",(0,r.jsx)(n.p,{children:"Start by cloning the HAWKI repository to your server:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/HAWK-Digital-Environments/HAWKI.git\ncd HAWKI\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-environment-configuration",children:"2. Environment Configuration"}),"\n",(0,r.jsx)(n.p,{children:"Create and configure the environment file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Edit the ",(0,r.jsx)(n.code,{children:".env"})," file and update the following key sections:"]}),"\n",(0,r.jsx)(n.h4,{id:"database-configuration",children:"Database Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"DB_CONNECTION=mysql\nDB_HOST=db\nDB_PORT=3306\nDB_DATABASE=hawki\nDB_USERNAME=hawki_user\nDB_PASSWORD=your_secure_password\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that ",(0,r.jsx)(n.code,{children:"DB_HOST"})," is set to ",(0,r.jsx)(n.code,{children:"db"}),", which is the service name in Docker Compose."]}),"\n",(0,r.jsx)(n.h4,{id:"reverb-websocket-configuration",children:"REVERB WebSocket Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"REVERB_APP_ID=my-app-id\nREVERB_APP_KEY=my-app-key\nREVERB_APP_SECRET=my-app-secret\n\nREVERB_SERVER_HOST=0.0.0.0\nREVERB_SERVER_PORT=8080\n\nREVERB_HOST=your-domain.com\nREVERB_PORT=80\nREVERB_SCHEME=http\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For production deployments, update REVERB_SCHEME to ",(0,r.jsx)(n.code,{children:"https"})," and REVERB_PORT to ",(0,r.jsx)(n.code,{children:"443"})," when using SSL."]}),"\n",(0,r.jsx)(n.h4,{id:"server-salts-security",children:"Server Salts (Security)"}),"\n",(0,r.jsx)(n.p,{children:"Generate random strings for the following encryption salts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"USERDATA_ENCRYPTION_SALT=base64:RandomHash==\nINVITATION_SALT=base64:RandomHash==\nAI_CRYPTO_SALT=base64:RandomHash==\nPASSKEY_SALT=base64:RandomHash==\nBACKUP_SALT=base64:RandomHash==\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can generate secure random strings using:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"openssl rand -base64 32\n"})}),"\n",(0,r.jsx)(n.h4,{id:"authentication-method",children:"Authentication Method"}),"\n",(0,r.jsx)(n.p,{children:"Set your preferred authentication method:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'AUTHENTICATION_METHOD="LDAP" # or "OIDC" or "Shibboleth"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"3-configure-api-keys",children:"3. Configure API Keys"}),"\n",(0,r.jsx)(n.p,{children:"Create and configure the model providers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cp config/model_providers.php.example config/model_providers.php\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Edit the ",(0,r.jsx)(n.code,{children:"config/model_providers.php"})," file to include your API keys for OpenAI, GWDG, or Google."]}),"\n",(0,r.jsx)(n.h3,{id:"4-build-and-start-docker-containers",children:"4. Build and Start Docker Containers"}),"\n",(0,r.jsx)(n.p,{children:"Build and start the Docker containers using Docker Compose:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command builds the application image, creates the containers, and starts them in detached mode."}),"\n",(0,r.jsx)(n.h3,{id:"5-initialize-the-database",children:"5. Initialize the Database"}),"\n",(0,r.jsx)(n.p,{children:"The first time you run HAWKI, you need to run database migrations and seed the database with initial data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app php artisan migrate --seed\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command creates all necessary database tables and seeds them with initial data, including the HAWKI AI agent user."}),"\n",(0,r.jsx)(n.h3,{id:"6-create-storage-link",children:"6. Create Storage Link"}),"\n",(0,r.jsx)(n.p,{children:"Create the symbolic link for the storage directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app php artisan storage:link\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This command creates a symbolic link from ",(0,r.jsx)(n.code,{children:"public/storage"})," to ",(0,r.jsx)(n.code,{children:"storage/app/public"})," to allow access to user-uploaded files."]}),"\n",(0,r.jsx)(n.h3,{id:"7-cache-configuration-optional",children:"7. Cache Configuration (Optional)"}),"\n",(0,r.jsx)(n.p,{children:"For improved performance, you can cache Laravel configuration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app php artisan config:cache\ndocker-compose exec app php artisan route:cache\n"})}),"\n",(0,r.jsx)(n.h2,{id:"accessing-hawki",children:"Accessing HAWKI"}),"\n",(0,r.jsx)(n.p,{children:"After completing the setup, you can access HAWKI using:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Web Application: ",(0,r.jsx)(n.a,{href:"http://your-server-ip",children:"http://your-server-ip"})," (or ",(0,r.jsx)(n.a,{href:"http://localhost",children:"http://localhost"})," if running locally)"]}),"\n",(0,r.jsxs)(n.li,{children:["phpMyAdmin: ",(0,r.jsx)(n.a,{href:"http://your-server-ip:8081",children:"http://your-server-ip:8081"})," (for database management)"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"production-deployment-considerations",children:"Production Deployment Considerations"}),"\n",(0,r.jsx)(n.p,{children:"For production deployments, consider the following additional steps:"}),"\n",(0,r.jsx)(n.h3,{id:"1-ssltls-configuration",children:"1. SSL/TLS Configuration"}),"\n",(0,r.jsx)(n.p,{children:"To secure your HAWKI deployment, configure SSL/TLS by using a reverse proxy like Nginx or Traefik in front of the Docker containers."}),"\n",(0,r.jsx)(n.h3,{id:"2-docker-volumes-for-persistent-data",children:"2. Docker Volumes for Persistent Data"}),"\n",(0,r.jsx)(n.p,{children:"The Docker Compose configuration already includes volumes for:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MySQL database data"}),"\n",(0,r.jsx)(n.li,{children:"HAWKI storage directory"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This ensures your data persists even if containers are recreated."}),"\n",(0,r.jsx)(n.h3,{id:"3-regular-backups",children:"3. Regular Backups"}),"\n",(0,r.jsx)(n.p,{children:"Implement regular backups of the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MySQL database"}),"\n",(0,r.jsx)(n.li,{children:"Storage directory (user uploads)"}),"\n",(0,r.jsx)(n.li,{children:"Configuration files"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-container-resource-limits",children:"4. Container Resource Limits"}),"\n",(0,r.jsx)(n.p,{children:"For better resource management, consider adding resource limits to your Docker Compose file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"services:\n  app:\n    # ... existing configuration\n    deploy:\n      resources:\n        limits:\n          cpus: '1'\n          memory: 1G\n  \n  db:\n    # ... existing configuration\n    deploy:\n      resources:\n        limits:\n          cpus: '1'\n          memory: 1G\n"})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"1-container-logs",children:"1. Container Logs"}),"\n",(0,r.jsx)(n.p,{children:"View container logs to diagnose issues:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Application container logs\ndocker-compose logs app\n\n# Database container logs\ndocker-compose logs db\n\n# Follow logs in real-time\ndocker-compose logs -f app\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-supervisor-process-logs",children:"2. Supervisor Process Logs"}),"\n",(0,r.jsx)(n.p,{children:"Check supervisor process logs inside the container:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app cat /var/log/supervisor/worker.log\ndocker-compose exec app cat /var/log/supervisor/reverb.log\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-restarting-services",children:"3. Restarting Services"}),"\n",(0,r.jsx)(n.p,{children:"To restart individual services:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Restart Reverb WebSocket server\ndocker-compose exec app supervisorctl restart reverb\n\n# Restart Laravel workers\ndocker-compose exec app supervisorctl restart laravel-worker:*\n\n# Restart Apache\ndocker-compose exec app supervisorctl restart apache\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-common-issues",children:"4. Common Issues"}),"\n",(0,r.jsx)(n.h4,{id:"failed-to-fetch-server-salt",children:'"Failed to fetch Server Salt"'}),"\n",(0,r.jsx)(n.p,{children:"Clear Laravel cache:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app php artisan config:clear\ndocker-compose exec app php artisan cache:clear\n"})}),"\n",(0,r.jsx)(n.h4,{id:"websocket-connection-issues",children:"WebSocket Connection Issues"}),"\n",(0,r.jsx)(n.p,{children:"Ensure the Reverb service is running:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app supervisorctl status reverb\n"})}),"\n",(0,r.jsx)(n.h4,{id:"database-connection-issues",children:"Database Connection Issues"}),"\n",(0,r.jsxs)(n.p,{children:["Verify database credentials in the ",(0,r.jsx)(n.code,{children:".env"})," file match those in the ",(0,r.jsx)(n.code,{children:"docker-compose.yml"})," file."]}),"\n",(0,r.jsx)(n.h2,{id:"updating-hawki",children:"Updating HAWKI"}),"\n",(0,r.jsx)(n.p,{children:"To update HAWKI to a newer version:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Pull the latest changes from the repository:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git pull\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Rebuild and restart the containers:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose down\ndocker-compose up -d --build\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Run any pending migrations:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app php artisan migrate\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsx)(n.li,{children:"Clear caches:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker-compose exec app php artisan config:clear\ndocker-compose exec app php artisan cache:clear\ndocker-compose exec app php artisan view:clear\n"})}),"\n",(0,r.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,r.jsx)(n.p,{children:"This Docker deployment approach provides a containerized environment for running HAWKI, ensuring consistency and simplifying the setup process. The configuration includes all necessary components: the web application, database, workers, and WebSocket server."}),"\n",(0,r.jsx)(n.p,{children:"For additional support or questions regarding Docker deployment, please refer to the project's GitHub repository or contact the development team."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);